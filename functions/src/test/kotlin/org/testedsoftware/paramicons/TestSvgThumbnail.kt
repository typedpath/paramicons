package org.testedsoftware.paramicons

import java.io.File

fun main() {
    val start = System.currentTimeMillis()
    val rawQueryString = "id=PolarRadialCon2.0&params=%7B%22rotationalFrequency%22:10,%22radialFrequency%22:5,%22angleDegrees%22:90,%22unit%22:30,%22clipRadius%22:400,%22loading%22:true,%22spokeAngle0%22:120,%22spokeAngle1%22:-100,%22spokeUnit%22:400,%22fillColours%22:[%22red%22,%22orange%22,%22yellow%22,%22green%22,%22blue%22,%22indigo%22,%22violet%22],%22radialColourGradient%22:true,%22pageWidth%22:300,%22pageHeight%22:300%7D"
    val svg ="<svg height=\"200\" viewBox=\"-400 -400 800 800\" width=\"200\" fill-rule=\"evenodd\" xmlns=\"http://www.w3.org/2000/svg\"><clipPath id=\"clipPath13965\"><circle cx=\"0\" cy=\"0\" r=\"400\"></circle></clipPath><defs><radialGradient id=\"gradient4562\"><stop offset=\"14.285714285714286%\" stop-color=\"red\"></stop><stop offset=\"28.571428571428573%\" stop-color=\"orange\"></stop><stop offset=\"42.857142857142854%\" stop-color=\"yellow\"></stop><stop offset=\"57.142857142857146%\" stop-color=\"green\"></stop><stop offset=\"71.42857142857143%\" stop-color=\"blue\"></stop><stop offset=\"85.71428571428571%\" stop-color=\"indigo\"></stop><stop offset=\"100%\" stop-color=\"violet\"></stop></radialGradient></defs><path clip-path=\"url(#clipPath13965)\" id=\"onlyme\" fill=\"url(#gradient4562)\" stroke=\"black\" fill-rule=\"evenodd\" d=\" M -6 0 A 6 6, 0, 1, 0, 6 0 A 6 6, 0, 1, 0, -6 0  M -12 0 A 12 12, 0, 1, 0, 12 0 A 12 12, 0, 1, 0, -12 0  M -18 0 A 18 18, 0, 1, 0, 18 0 A 18 18, 0, 1, 0, -18 0  M -24 0 A 24 24, 0, 1, 0, 24 0 A 24 24, 0, 1, 0, -24 0  M -30 0 A 30 30, 0, 1, 0, 30 0 A 30 30, 0, 1, 0, -30 0  M0, 0 C173.20508075688775,-99.99999999999996 173.20508075688775,500 0,400 M0, 0 C-196.9615506024416,-34.72963553338606 -196.96155060244163,434.729635533386 0,400 M0, 0 C81.34732861516008,-182.70909152852016 434.0184799906439,302.70110509644826 235.11410091698926,323.60679774997897 M0, 0 C-179.7588092598334,87.67422935781549 96.18242682518974,467.47475781770913 235.11410091698926,323.60679774997897 M0, 0 C-41.58233816355181,-195.62952014676114 529.0515716135403,-10.219323521792674 380.4226065180614,123.60679774997898 M0, 0 C-93.89431255717817,176.5895185717854 352.5879863260482,321.66041149829306 380.4226065180614,123.60679774997898 M0, 0 C-148.6289650954788,-133.82612127177168 422.0049446816133,-319.23631789674005 380.42260651806146,-123.60679774997894 M0, 0 C27.834620192013084,198.05361374831406 474.3169190752395,52.98272082180651 380.42260651806146,-123.60679774997894 M0, 0 C-198.90437907365467,-20.905692653530846 153.76677230182923,-506.31588927849907 235.1141009169893,-323.6067977499789 M0, 0 C138.93167409179944,143.86796006773025 414.87291017682264,-235.93256839216335 235.1141009169893,-323.6067977499789 M0, 0 C-173.2050807568878,99.99999999999987 -173.2050807568877,-499.99999999999994 4.898587196589413e-14,-400 M0, 0 C196.9615506024416,34.72963553338608 196.9615506024417,-434.729635533386 4.898587196589413e-14,-400 M0, 0 C-81.34732861516018,182.7090915285201 -434.01847999064387,-302.70110509644826 -235.1141009169892,-323.606797749979 M0, 0 C179.75880925983338,-87.6742293578155 -96.18242682518965,-467.47475781770913 -235.1141009169892,-323.606797749979 M0, 0 C41.582338163551704,195.62952014676117 -529.0515716135402,10.21932352179266 -380.4226065180614,-123.60679774997902 M0, 0 C93.89431255717814,-176.5895185717854 -352.5879863260482,-321.6604114982931 -380.4226065180614,-123.60679774997902 M0, 0 C148.62896509547875,133.82612127177177 -422.00494468161327,319.23631789674005 -380.42260651806146,123.6067977499789 M0, 0 C-27.834620192013105,-198.05361374831406 -474.3169190752395,-52.98272082180655 -380.42260651806146,123.6067977499789 M0, 0 C198.90437907365467,20.90569265353087 -153.76677230182923,506.31588927849907 -235.11410091698934,323.6067977499789 M0, 0 C-138.93167409179947,-143.86796006773022 -414.87291017682264,235.93256839216332 -235.11410091698934,323.6067977499789\"></path></svg>"
    val result = thumbnail(svg, "http://devparamicons.testedsoftware.org", rawQueryString=rawQueryString,
        width=256, height = 256)
    val outputRootDir = File("/temp/shares/")
    outputRootDir.mkdirs()
    fun write(key: String, content: ByteArray) {
        val file = File(outputRootDir, key)
        file.parentFile.mkdirs()
        println("writing to ${file.absolutePath}")
        file.writeBytes(content)
    }
    println("timeTaken: ${System.currentTimeMillis()-start} milliseconds")
    println("indexPage:\n${result.indexPage}" )
    write(result.thumbnailImageKey, result.thumbnailImage)
    write(result.indexPageKey, result.indexPage.toByteArray())

}